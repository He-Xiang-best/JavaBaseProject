用多线程实现一个动画，效果为一个球由小到大，从屏幕左侧滚到右侧
思路及方法：

1.使用Runnable接口的方法实现多线程
编辑TestRunnable.java
import java.applet.*;
import java.awt.*;
public class TestRunnable extends Applet implements Runnable
{
 Label prompt1=new Label(“the first thread”);
 Label prompt2=new Label(“the second thread”);
 TextField threadFirst=new TextField(14);
 TextField threadSecond=new TextField(14);
Thread Thread1, Thread2;
int count1=0,count2=0;
public void init()
{
 add(prompt1);
 add(threadFirst);
 add(prompt2);
 add(threadSecond);
 }
public void start()
{
 thread1=new Thread(this, “FirstThread”);
 thread2=new Thread(this, “SecondThread”);
 thread1.start();
 thraed2.start();
 public void run()
 {
  String currentRunning;
  while(true)
  {
   try{
      Thread.sleep((int)(Math.random()*10000));
   }
   catch(Exception e) {}
   currentRunning=Thread.currentTheard().getName();
   if(currentRunning.equals(“FirstTheard”))
   {
    count1++;
    threadFirst.setText(“the first thread”+count1+“use”);
    }
   else if(currentRunning.equals(“SecondThread”))
   {
    count2++;
    threadSecond.setText(“the second thread”+count2+“use”);
    }
  }
编译TestRunnable.java

2.编辑TestRunnable.htm，要求与TestRunnable.class在同一目录下。
<html>
<applet code=TestRunnable.class height=300 width=400>
</applet>
</html>
运行TestRunnable.htm

3.实现简单动画
实现一个简单动画，效果为一个球由小到大，从屏幕左侧滚动到右侧。
编辑TestRunnable.java
import java.applet.*;
import java.awt.*;
public class Mov extends Applet
{
 int x1=50,x2=5,y1=25,y2=5;
 public void paint(Graphics g)
 {
  int w=this.getWhidth();
  int h=this.get.height();
  if(x1>=w)
  {
   x1=50;
  }
  if(x2>h)
  {
   x2=5;
   }
  g.setColor(Color.BLUE);
  g.fillOval(x1,y1,x2,x2);
  g.drawOval(x1,y1,x2,x2);
  x1+=50;
  x2+=5;
  try{
  Thread.sleep(500);
   }
  catch(Exception e) {}
  repaint();
}
编译Mov.java

4.编辑Mov.htm，要求与Mov.class在同一目录下
<html>
<applet code=”Mov.class” height=300 width=400>
</applet>
</html>
运行Mov.htm
五

 
 



